{"version":3,"sources":["views/Counter/index.js","containers/CounterContainer.js","views/CounterParent/index.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","props","style","className","currentCount","Button","variant","size","onClick","onDecrementClicked","onResetClicked","onIncrementClicked","CounterContainer","state","bind","nextProps","nextContext","console","log","this","constructor","name","UNSAFE_componentWillReceiveProps","event","setState","prevState","nextState","React","Component","CounterParent","counters","onCounterRemoved","onNewCounterAdded","onCounterReset","newElements","i","length","push","ButtonGroup","App","styles","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e99fbf3.chunk.js","sourcesContent":["import {Button} from \"@mui/material\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Counter = (props) => (\r\n    <div style={props.style} className={\"mainContainer\"}>\r\n        <p className={\"counter\"}>{props.currentCount}</p>\r\n        <div className={\"buttonContainer\"}>\r\n            <Button variant=\"outlined\" size={\"medium\"} onClick={() => props.onDecrementClicked()}>-</Button>\r\n            <Button variant=\"outlined\" size={\"medium\"} onClick={() => props.onResetClicked()}>Reset</Button>\r\n            <Button variant=\"outlined\" size={\"medium\"} onClick={() => props.onIncrementClicked()}>+</Button>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nCounter.propTypes = {\r\n    onDecrementClicked: PropTypes.func,\r\n    onResetClicked: PropTypes.func,\r\n    onIncrementClicked: PropTypes.func,\r\n    style: PropTypes.object,\r\n    currentCount: PropTypes.number,\r\n};\r\n\r\nexport default Counter;","import React from \"react\";\r\nimport Counter from \"../views/Counter\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"react-dom\";\r\n\r\nexport default class CounterContainer extends React.Component {\r\n    state = {currentCount: 0,};\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onDecrementClicked = this.onDecrementClicked.bind(this);\r\n        this.onIncrementClicked = this.onIncrementClicked.bind(this);\r\n        this.onResetClicked = this.onResetClicked.bind(this);\r\n    }\r\n\r\n    //this fucking shit does not work. idk what to do to make react call this garbage\r\n    UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\r\n        console.log(`${this.constructor.name} : ${this.UNSAFE_componentWillReceiveProps.name}`);\r\n        if (nextProps.event === \"created\") {\r\n            if (this.state.currentCount !== 0 && this.state.currentCount % 2 === 0) this.setState(prevState => ({currentCount: prevState.currentCount + 1,}));\r\n        }\r\n        if (nextProps.event === \"removed\") {\r\n            if (this.state.currentCount % 2 !== 0) this.setState(prevState => ({currentCount: prevState.currentCount - 1,}));\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return this.state.currentCount !== nextState.currentCount;\r\n    }\r\n\r\n    onIncrementClicked() {\r\n        this.setState(prevState => ({currentCount: prevState.currentCount + 1,}));\r\n    }\r\n\r\n    onDecrementClicked() {\r\n        this.setState(prevState => ({currentCount: prevState.currentCount - 1,}));\r\n    }\r\n\r\n    onResetClicked() {\r\n        this.setState({currentCount: 0,});\r\n    }\r\n\r\n    render() {\r\n        return <Counter currentCount={this.state.currentCount} onDecrementClicked={this.onDecrementClicked}\r\n                        onIncrementClicked={this.onIncrementClicked}\r\n                        onResetClicked={this.onResetClicked} {...this.props}/>\r\n    }\r\n\r\n}\r\n\r\nCounterContainer.propTypes = {\r\n    style: PropTypes.object\r\n};","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport {Button, ButtonGroup} from \"@mui/material\";\r\nimport CounterContainer from \"../../containers/CounterContainer\";\r\n\r\nexport default class CounterParent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            counters: [],\r\n        };\r\n        this.onCounterRemoved = this.onCounterRemoved.bind(this);\r\n        this.onNewCounterAdded = this.onNewCounterAdded.bind(this);\r\n        this.onCounterReset = this.onCounterReset.bind(this);\r\n    }\r\n\r\n    onNewCounterAdded() {\r\n        this.setState(prevState => {\r\n            let newElements = [];\r\n            for (let i = 0; i < prevState.counters.length + 1; i++) {\r\n                newElements.push(<CounterContainer event={\"created\"} {...this.props}/>)\r\n            }\r\n            return {\r\n                counters: newElements,\r\n            }\r\n        })\r\n    }\r\n\r\n    onCounterReset() {\r\n        this.setState({counters: []})\r\n    }\r\n\r\n    onCounterRemoved() {\r\n        this.setState(prevState => {\r\n            let newElements = [];\r\n            for (let i = 0; i < prevState.counters.length - 1; i++) {\r\n                newElements.push(<CounterContainer event={\"removed\"} {...this.props}/>)\r\n            }\r\n            return {\r\n                counters: newElements,\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"container\"}>\r\n                <ButtonGroup variant={\"outlined\"}>\r\n                    <Button onClick={this.onNewCounterAdded}>+</Button>\r\n                    <Button onClick={this.onCounterReset}>Reset</Button>\r\n                    <Button onClick={this.onCounterRemoved}>-</Button>\r\n                </ButtonGroup>\r\n                <div className={\"counters\"}>{this.state.counters}</div>\r\n            </div>\r\n        )\r\n    }\r\n}","import './App.css';\nimport styles from \"./views/Counter/styles.css\";\nimport CounterContainer from \"./containers/CounterContainer\";\nimport CounterParent from \"./views/CounterParent\";\n\nfunction App() {\n    return (\n        <div style={{\"display\": \"flex\", \"flex-direction\": \"row\"}}>\n            <CounterContainer style={styles}/>\n            <CounterParent style={styles}/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}