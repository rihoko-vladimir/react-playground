{"version":3,"sources":["views/Counter/index.js","containers/CounterContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","props","style","className","currentCount","Button","variant","size","onClick","onDecrementClicked","onResetClicked","onIncrementClicked","CounterContainer","state","bind","this","setState","prevState","React","Component","App","styles","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAsBeA,EAnBC,SAACC,GAAD,OACZ,sBAAKC,MAAOD,EAAMC,MAAOC,UAAW,gBAApC,UACI,mBAAGA,UAAW,UAAd,SAA0BF,EAAMG,eAChC,sBAAKD,UAAW,kBAAhB,UACI,cAACE,EAAA,EAAD,CAAQC,QAAQ,WAAWC,KAAM,SAAUC,QAAS,kBAAMP,EAAMQ,sBAAhE,eACA,cAACJ,EAAA,EAAD,CAAQC,QAAQ,WAAWC,KAAM,SAAUC,QAAS,kBAAMP,EAAMS,kBAAhE,mBACA,cAACL,EAAA,EAAD,CAAQC,QAAQ,WAAWC,KAAM,SAAUC,QAAS,kBAAMP,EAAMU,sBAAhE,sBCLSC,E,kDAGjB,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IAHVY,MAAQ,CAACT,aAAc,GAInB,EAAKK,mBAAqB,EAAKA,mBAAmBK,KAAxB,gBAC1B,EAAKH,mBAAqB,EAAKA,mBAAmBG,KAAxB,gBAC1B,EAAKJ,eAAiB,EAAKA,eAAeI,KAApB,gBAJP,E,sDAOnB,WACIC,KAAKC,UAAS,SAAAC,GAAS,MAAK,CAACb,aAAca,EAAUb,aAAe,Q,gCAGxE,WACIW,KAAKC,UAAS,SAAAC,GAAS,MAAK,CAACb,aAAca,EAAUb,aAAe,Q,4BAGxE,WACIW,KAAKC,SAAS,CAACZ,aAAc,M,oBAGjC,WACI,OAAO,cAAC,EAAD,aAASA,aAAcW,KAAKF,MAAMT,aAAcK,mBAAoBM,KAAKN,mBAChEE,mBAAoBI,KAAKJ,mBACzBD,eAAgBK,KAAKL,gBAAoBK,KAAKd,Y,GAzBxBiB,IAAMC,WCQrCC,MARf,WACI,OACI,qBAAKlB,MAAO,CAAC,QAAW,OAAQ,iBAAkB,OAAlD,SACI,cAAC,EAAD,CAAkBA,MAAOmB,SCKtBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e62ceafe.chunk.js","sourcesContent":["import {Button} from \"@mui/material\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Counter = (props) => (\r\n    <div style={props.style} className={\"mainContainer\"}>\r\n        <p className={\"counter\"}>{props.currentCount}</p>\r\n        <div className={\"buttonContainer\"}>\r\n            <Button variant=\"outlined\" size={\"medium\"} onClick={() => props.onDecrementClicked()}>-</Button>\r\n            <Button variant=\"outlined\" size={\"medium\"} onClick={() => props.onResetClicked()}>Reset</Button>\r\n            <Button variant=\"outlined\" size={\"medium\"} onClick={() => props.onIncrementClicked()}>+</Button>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nCounter.propTypes = {\r\n    onDecrementClicked: PropTypes.func,\r\n    onResetClicked: PropTypes.func,\r\n    onIncrementClicked: PropTypes.func,\r\n    style: PropTypes.object,\r\n    currentCount: PropTypes.number,\r\n};\r\n\r\nexport default Counter;","import React from \"react\";\r\nimport Counter from \"../views/Counter\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class CounterContainer extends React.Component {\r\n    state = {currentCount: 0,};\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onDecrementClicked = this.onDecrementClicked.bind(this);\r\n        this.onIncrementClicked = this.onIncrementClicked.bind(this);\r\n        this.onResetClicked = this.onResetClicked.bind(this);\r\n    }\r\n\r\n    onIncrementClicked() {\r\n        this.setState(prevState => ({currentCount: prevState.currentCount + 1,}));\r\n    }\r\n\r\n    onDecrementClicked() {\r\n        this.setState(prevState => ({currentCount: prevState.currentCount - 1,}));\r\n    }\r\n\r\n    onResetClicked() {\r\n        this.setState({currentCount: 0,});\r\n    }\r\n\r\n    render() {\r\n        return <Counter currentCount={this.state.currentCount} onDecrementClicked={this.onDecrementClicked}\r\n                        onIncrementClicked={this.onIncrementClicked}\r\n                        onResetClicked={this.onResetClicked} {...this.props}/>\r\n    }\r\n\r\n}\r\n\r\nCounterContainer.propTypes = {\r\n    style: PropTypes.object\r\n};","import './App.css';\nimport styles from \"./views/Counter/styles.css\";\nimport CounterContainer from \"./containers/CounterContainer\";\n\nfunction App() {\n    return (\n        <div style={{\"display\": \"flex\", \"flex-direction\": \"row\"}}>\n            <CounterContainer style={styles}/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}